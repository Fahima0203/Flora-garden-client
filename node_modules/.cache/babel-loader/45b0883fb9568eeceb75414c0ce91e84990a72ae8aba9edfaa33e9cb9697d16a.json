{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECT\\\\Project\\\\Flora-Host\\\\client\\\\src\\\\Components\\\\Login.jsx\",\n  _s = $RefreshSig$();\n//import { Routes, Route, useNavigate } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { useState, useEffect, React } from \"react\";\n// import { axiosInstance } from \"../config\";\nimport axios from 'axios';\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  // React States\n  const [errorMessages, setErrorMessages] = useState({});\n  const [data, setData] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  useEffect(() => {\n    axios.get(\"http://localhost:5002/fetchUser\")\n    // .get(\"https://flora-host.herokuapp.com/fetchUser\")\n    .then(res => setData(res.data)).catch(err => console.log(err, \"it has an error\"));\n  });\n  // User Login info\n  const navigate = useNavigate();\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n  const handleSubmit = event => {\n    //Prevent page reload\n    event.preventDefault();\n    var {\n      uname,\n      pass\n    } = document.forms[0];\n\n    // Find user login info\n    // const userData = database.find((user) => user.username === uname.value);\n    const userData = data.find(user => user.uname === uname.value);\n\n    // Compare user info\n    if (userData) {\n      if (userData.password !== pass.value) {\n        // Invalid password\n        setErrorMessages({\n          name: \"pass\",\n          message: errors.pass\n        });\n      } else {\n        setIsSubmitted(true);\n      }\n    } else {\n      // Username not found\n      setErrorMessages({\n        name: \"uname\",\n        message: errors.uname\n      });\n    }\n  };\n\n  // Generate JSX code for error message\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 13\n  }, this);\n\n  // JSX code for login form\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"uname\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), renderErrorMessage(\"uname\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"pass\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), renderErrorMessage(\"pass\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: isSubmitted ? navigate('/PlantDetailsForm') : renderForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"ww2x51szHSWSx4Maaxiqb2Aewnc=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useNavigate","useState","useEffect","React","axios","Login","errorMessages","setErrorMessages","data","setData","isSubmitted","setIsSubmitted","get","then","res","catch","err","console","log","navigate","errors","uname","pass","handleSubmit","event","preventDefault","document","forms","userData","find","user","value","password","name","message","renderErrorMessage","renderForm"],"sources":["D:/PROJECT/Project/Flora-Host/client/src/Components/Login.jsx"],"sourcesContent":["//import { Routes, Route, useNavigate } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState, useEffect, React } from \"react\";\r\n// import { axiosInstance } from \"../config\";\r\nimport axios from 'axios';\r\n\r\nimport \"./Login.css\";\r\n\r\nfunction Login() {\r\n    // React States\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [data, setData] = useState([]);\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    useEffect(() => {\r\n        axios\r\n             .get(\"http://localhost:5002/fetchUser\")\r\n            // .get(\"https://flora-host.herokuapp.com/fetchUser\")\r\n            .then((res) => setData(res.data))\r\n            .catch((err) => console.log(err, \"it has an error\"));\r\n    });\r\n    // User Login info\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const errors = {\r\n        uname: \"invalid username\",\r\n        pass: \"invalid password\"\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        //Prevent page reload\r\n        event.preventDefault();\r\n\r\n        var { uname, pass } = document.forms[0];\r\n\r\n        // Find user login info\r\n        // const userData = database.find((user) => user.username === uname.value);\r\n        const userData = data.find((user) => user.uname === uname.value);\r\n\r\n        // Compare user info\r\n        if (userData) {\r\n            if (userData.password !== pass.value) {\r\n                // Invalid password\r\n                setErrorMessages({ name: \"pass\", message: errors.pass });\r\n            } else {\r\n                setIsSubmitted(true);\r\n            }\r\n        } else {\r\n            // Username not found\r\n            setErrorMessages({ name: \"uname\", message: errors.uname });\r\n        }\r\n    };\r\n\r\n    // Generate JSX code for error message\r\n    const renderErrorMessage = (name) =>\r\n        name === errorMessages.name && (\r\n            <div className=\"error\">{errorMessages.message}</div>\r\n        );\r\n\r\n    // JSX code for login form\r\n    const renderForm = (\r\n        <div className=\"form\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Username </label>\r\n                    <input type=\"text\" name=\"uname\" required />\r\n                    {renderErrorMessage(\"uname\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Password </label>\r\n                    <input type=\"password\" name=\"pass\" required />\r\n                    {renderErrorMessage(\"pass\")}\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <input type=\"submit\" />\r\n                </div>\r\n            </form>\r\n            {/* <div>\r\n        {data.map((items)=>\r\n            {\r\n                return<>\r\n                <div>\r\n                    <p>Username = {items.username}</p>\r\n                    <p>Password = {items.password}</p>\r\n                </div>\r\n                </>\r\n                \r\n            })\r\n        }\r\n      </div> */}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"login-form\">\r\n                {/* <div className=\"title\">Sign In</div> */}\r\n                {isSubmitted ? navigate('/PlantDetailsForm') : renderForm}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;"],"mappings":";;AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,EAAEC,SAAS,EAAEC,KAAK,QAAQ,OAAO;AAClD;AACA,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,aAAa;AAAC;AAErB,SAASC,KAAK,GAAG;EAAA;EACb;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACrDC,SAAS,CAAC,MAAM;IACZE,KAAK,CACCQ,GAAG,CAAC,iCAAiC;IACvC;IAAA,CACCC,IAAI,CAAEC,GAAG,IAAKL,OAAO,CAACK,GAAG,CAACN,IAAI,CAAC,CAAC,CAChCO,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,EAAE,iBAAiB,CAAC,CAAC;EAC5D,CAAC,CAAC;EACF;EACA,MAAMG,QAAQ,GAAGnB,WAAW,EAAE;EAG9B,MAAMoB,MAAM,GAAG;IACXC,KAAK,EAAE,kBAAkB;IACzBC,IAAI,EAAE;EACV,CAAC;EAED,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC5B;IACAA,KAAK,CAACC,cAAc,EAAE;IAEtB,IAAI;MAAEJ,KAAK;MAAEC;IAAK,CAAC,GAAGI,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC;;IAEvC;IACA;IACA,MAAMC,QAAQ,GAAGpB,IAAI,CAACqB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACT,KAAK,KAAKA,KAAK,CAACU,KAAK,CAAC;;IAEhE;IACA,IAAIH,QAAQ,EAAE;MACV,IAAIA,QAAQ,CAACI,QAAQ,KAAKV,IAAI,CAACS,KAAK,EAAE;QAClC;QACAxB,gBAAgB,CAAC;UAAE0B,IAAI,EAAE,MAAM;UAAEC,OAAO,EAAEd,MAAM,CAACE;QAAK,CAAC,CAAC;MAC5D,CAAC,MAAM;QACHX,cAAc,CAAC,IAAI,CAAC;MACxB;IACJ,CAAC,MAAM;MACH;MACAJ,gBAAgB,CAAC;QAAE0B,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEd,MAAM,CAACC;MAAM,CAAC,CAAC;IAC9D;EACJ,CAAC;;EAED;EACA,MAAMc,kBAAkB,GAAIF,IAAI,IAC5BA,IAAI,KAAK3B,aAAa,CAAC2B,IAAI,iBACvB;IAAK,SAAS,EAAC,OAAO;IAAA,UAAE3B,aAAa,CAAC4B;EAAO;IAAA;IAAA;IAAA;EAAA,QAChD;;EAEL;EACA,MAAME,UAAU,gBACZ;IAAK,SAAS,EAAC,MAAM;IAAA,uBACjB;MAAM,QAAQ,EAAEb,YAAa;MAAA,wBACzB;QAAK,SAAS,EAAC,iBAAiB;QAAA,wBAC5B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAwB,eACxB;UAAO,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,OAAO;UAAC,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAAG,EAC1CY,kBAAkB,CAAC,OAAO,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1B,eACN;QAAK,SAAS,EAAC,iBAAiB;QAAA,wBAC5B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAwB,eACxB;UAAO,IAAI,EAAC,UAAU;UAAC,IAAI,EAAC,MAAM;UAAC,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAAG,EAC7CA,kBAAkB,CAAC,MAAM,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACzB,eACN;QAAK,SAAS,EAAC,kBAAkB;QAAA,uBAC7B;UAAO,IAAI,EAAC;QAAQ;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACrB;IAAA;MAAA;MAAA;MAAA;IAAA;EACH;IAAA;IAAA;IAAA;EAAA,QAed;EAED,oBACI;IAAK,SAAS,EAAC,KAAK;IAAA,uBAChB;MAAK,SAAS,EAAC,YAAY;MAAA,UAEtBzB,WAAW,GAAGS,QAAQ,CAAC,mBAAmB,CAAC,GAAGiB;IAAU;MAAA;MAAA;MAAA;IAAA;EACvD;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GA7FQ/B,KAAK;EAAA,QAaOL,WAAW;AAAA;AAAA,KAbvBK,KAAK;AA+Fd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}